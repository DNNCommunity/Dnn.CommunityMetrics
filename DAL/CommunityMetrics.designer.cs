#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dnn.CommunityMetrics
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dnn9")]
	public partial class DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void UpdateProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void DeleteProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void InsertCommunityMetrics_UserActivity(CommunityMetrics_UserActivity instance);
    partial void UpdateCommunityMetrics_UserActivity(CommunityMetrics_UserActivity instance);
    partial void DeleteCommunityMetrics_UserActivity(CommunityMetrics_UserActivity instance);
    partial void InsertCommunityMetrics_ActivitySetting(CommunityMetrics_ActivitySetting instance);
    partial void UpdateCommunityMetrics_ActivitySetting(CommunityMetrics_ActivitySetting instance);
    partial void DeleteCommunityMetrics_ActivitySetting(CommunityMetrics_ActivitySetting instance);
    partial void InsertCommunityMetrics_Activity(CommunityMetrics_Activity instance);
    partial void UpdateCommunityMetrics_Activity(CommunityMetrics_Activity instance);
    partial void DeleteCommunityMetrics_Activity(CommunityMetrics_Activity instance);
    partial void InsertCommunityMetrics_UserActivityLink(CommunityMetrics_UserActivityLink instance);
    partial void UpdateCommunityMetrics_UserActivityLink(CommunityMetrics_UserActivityLink instance);
    partial void DeleteCommunityMetrics_UserActivityLink(CommunityMetrics_UserActivityLink instance);
    #endregion
		
		public DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<ProfilePropertyDefinition> ProfilePropertyDefinitions
		{
			get
			{
				return this.GetTable<ProfilePropertyDefinition>();
			}
		}
		
		public System.Data.Linq.Table<CommunityMetrics_UserActivity> CommunityMetrics_UserActivities
		{
			get
			{
				return this.GetTable<CommunityMetrics_UserActivity>();
			}
		}
		
		public System.Data.Linq.Table<CommunityMetrics_ActivitySetting> CommunityMetrics_ActivitySettings
		{
			get
			{
				return this.GetTable<CommunityMetrics_ActivitySetting>();
			}
		}
		
		public System.Data.Linq.Table<CommunityMetrics_Activity> CommunityMetrics_Activities
		{
			get
			{
				return this.GetTable<CommunityMetrics_Activity>();
			}
		}
		
		public System.Data.Linq.Table<CommunityMetrics_UserActivityLink> CommunityMetrics_UserActivityLinks
		{
			get
			{
				return this.GetTable<CommunityMetrics_UserActivityLink>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<System.Guid> _PasswordResetToken;
		
		private System.Nullable<System.DateTime> _PasswordResetExpiration;
		
		private EntitySet<UserProfile> _UserProfiles;
		
		private EntitySet<CommunityMetrics_UserActivity> _CommunityMetrics_UserActivities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnPasswordResetTokenChanging(System.Nullable<System.Guid> value);
    partial void OnPasswordResetTokenChanged();
    partial void OnPasswordResetExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordResetExpirationChanged();
    #endregion
		
		public User()
		{
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			this._CommunityMetrics_UserActivities = new EntitySet<CommunityMetrics_UserActivity>(new Action<CommunityMetrics_UserActivity>(this.attach_CommunityMetrics_UserActivities), new Action<CommunityMetrics_UserActivity>(this.detach_CommunityMetrics_UserActivities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PasswordResetToken
		{
			get
			{
				return this._PasswordResetToken;
			}
			set
			{
				if ((this._PasswordResetToken != value))
				{
					this.OnPasswordResetTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetToken = value;
					this.SendPropertyChanged("PasswordResetToken");
					this.OnPasswordResetTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetExpiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordResetExpiration
		{
			get
			{
				return this._PasswordResetExpiration;
			}
			set
			{
				if ((this._PasswordResetExpiration != value))
				{
					this.OnPasswordResetExpirationChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetExpiration = value;
					this.SendPropertyChanged("PasswordResetExpiration");
					this.OnPasswordResetExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfiles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityMetrics_UserActivity", Storage="_CommunityMetrics_UserActivities", ThisKey="UserID", OtherKey="user_id")]
		public EntitySet<CommunityMetrics_UserActivity> CommunityMetrics_UserActivities
		{
			get
			{
				return this._CommunityMetrics_UserActivities;
			}
			set
			{
				this._CommunityMetrics_UserActivities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommunityMetrics_UserActivities(CommunityMetrics_UserActivity entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommunityMetrics_UserActivities(CommunityMetrics_UserActivity entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private string _ExtendedVisibility;
		
		private EntityRef<User> _User;
		
		private EntityRef<ProfilePropertyDefinition> _ProfilePropertyDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnExtendedVisibilityChanging(string value);
    partial void OnExtendedVisibilityChanged();
    #endregion
		
		public UserProfile()
		{
			this._User = default(EntityRef<User>);
			this._ProfilePropertyDefinition = default(EntityRef<ProfilePropertyDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					if (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NVarChar(MAX)")]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedVisibility", DbType="VarChar(400)")]
		public string ExtendedVisibility
		{
			get
			{
				return this._ExtendedVisibility;
			}
			set
			{
				if ((this._ExtendedVisibility != value))
				{
					this.OnExtendedVisibilityChanging(value);
					this.SendPropertyChanging();
					this._ExtendedVisibility = value;
					this.SendPropertyChanged("ExtendedVisibility");
					this.OnExtendedVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_ProfilePropertyDefinition", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProfilePropertyDefinition ProfilePropertyDefinition
		{
			get
			{
				return this._ProfilePropertyDefinition.Entity;
			}
			set
			{
				ProfilePropertyDefinition previousValue = this._ProfilePropertyDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfilePropertyDefinition.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._ProfilePropertyDefinition.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._PropertyDefinitionID = value.PropertyDefinitionID;
					}
					else
					{
						this._PropertyDefinitionID = default(int);
					}
					this.SendPropertyChanged("ProfilePropertyDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfilePropertyDefinition")]
	public partial class ProfilePropertyDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyDefinitionID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private bool _Deleted;
		
		private int _DataType;
		
		private string _DefaultValue;
		
		private string _PropertyCategory;
		
		private string _PropertyName;
		
		private int _Length;
		
		private bool _Required;
		
		private string _ValidationExpression;
		
		private int _ViewOrder;
		
		private bool _Visible;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _DefaultVisibility;
		
		private bool _ReadOnly;
		
		private EntitySet<UserProfile> _UserProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDataTypeChanging(int value);
    partial void OnDataTypeChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnPropertyCategoryChanging(string value);
    partial void OnPropertyCategoryChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnValidationExpressionChanging(string value);
    partial void OnValidationExpressionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnDefaultVisibilityChanging(System.Nullable<int> value);
    partial void OnDefaultVisibilityChanged();
    partial void OnReadOnlyChanging(bool value);
    partial void OnReadOnlyChanged();
    #endregion
		
		public ProfilePropertyDefinition()
		{
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCategory
		{
			get
			{
				return this._PropertyCategory;
			}
			set
			{
				if ((this._PropertyCategory != value))
				{
					this.OnPropertyCategoryChanging(value);
					this.SendPropertyChanging();
					this._PropertyCategory = value;
					this.SendPropertyChanged("PropertyCategory");
					this.OnPropertyCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationExpression", DbType="NVarChar(2000)")]
		public string ValidationExpression
		{
			get
			{
				return this._ValidationExpression;
			}
			set
			{
				if ((this._ValidationExpression != value))
				{
					this.OnValidationExpressionChanging(value);
					this.SendPropertyChanging();
					this._ValidationExpression = value;
					this.SendPropertyChanged("ValidationExpression");
					this.OnValidationExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVisibility", DbType="Int")]
		public System.Nullable<int> DefaultVisibility
		{
			get
			{
				return this._DefaultVisibility;
			}
			set
			{
				if ((this._DefaultVisibility != value))
				{
					this.OnDefaultVisibilityChanging(value);
					this.SendPropertyChanging();
					this._DefaultVisibility = value;
					this.SendPropertyChanged("DefaultVisibility");
					this.OnDefaultVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadOnly", DbType="Bit NOT NULL")]
		public bool ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this.OnReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._ReadOnly = value;
					this.SendPropertyChanged("ReadOnly");
					this.OnReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_UserProfiles", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityMetrics_UserActivity")]
	public partial class CommunityMetrics_UserActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _activity_id;
		
		private int _user_id;
		
		private System.DateTime _date;
		
		private int _count;
		
		private string _notes;
		
		private System.DateTime _created_on_date;
		
		private EntitySet<CommunityMetrics_UserActivityLink> _CommunityMetrics_UserActivityLinks;
		
		private EntityRef<User> _User;
		
		private EntityRef<CommunityMetrics_Activity> _CommunityMetrics_Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Oncreated_on_dateChanging(System.DateTime value);
    partial void Oncreated_on_dateChanged();
    #endregion
		
		public CommunityMetrics_UserActivity()
		{
			this._CommunityMetrics_UserActivityLinks = new EntitySet<CommunityMetrics_UserActivityLink>(new Action<CommunityMetrics_UserActivityLink>(this.attach_CommunityMetrics_UserActivityLinks), new Action<CommunityMetrics_UserActivityLink>(this.detach_CommunityMetrics_UserActivityLinks));
			this._User = default(EntityRef<User>);
			this._CommunityMetrics_Activity = default(EntityRef<CommunityMetrics_Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", DbType="Int NOT NULL")]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					if (this._CommunityMetrics_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(255)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on_date", DbType="DateTime NOT NULL")]
		public System.DateTime created_on_date
		{
			get
			{
				return this._created_on_date;
			}
			set
			{
				if ((this._created_on_date != value))
				{
					this.Oncreated_on_dateChanging(value);
					this.SendPropertyChanging();
					this._created_on_date = value;
					this.SendPropertyChanged("created_on_date");
					this.Oncreated_on_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_UserActivity_CommunityMetrics_UserActivityLink", Storage="_CommunityMetrics_UserActivityLinks", ThisKey="id", OtherKey="user_activity_id")]
		public EntitySet<CommunityMetrics_UserActivityLink> CommunityMetrics_UserActivityLinks
		{
			get
			{
				return this._CommunityMetrics_UserActivityLinks;
			}
			set
			{
				this._CommunityMetrics_UserActivityLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommunityMetrics_UserActivity", Storage="_User", ThisKey="user_id", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommunityMetrics_UserActivities.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommunityMetrics_UserActivities.Add(this);
						this._user_id = value.UserID;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_Activity_CommunityMetrics_UserActivity", Storage="_CommunityMetrics_Activity", ThisKey="activity_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommunityMetrics_Activity CommunityMetrics_Activity
		{
			get
			{
				return this._CommunityMetrics_Activity.Entity;
			}
			set
			{
				CommunityMetrics_Activity previousValue = this._CommunityMetrics_Activity.Entity;
				if (((previousValue != value) 
							|| (this._CommunityMetrics_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunityMetrics_Activity.Entity = null;
						previousValue.CommunityMetrics_UserActivities.Remove(this);
					}
					this._CommunityMetrics_Activity.Entity = value;
					if ((value != null))
					{
						value.CommunityMetrics_UserActivities.Add(this);
						this._activity_id = value.id;
					}
					else
					{
						this._activity_id = default(int);
					}
					this.SendPropertyChanged("CommunityMetrics_Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunityMetrics_UserActivityLinks(CommunityMetrics_UserActivityLink entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_UserActivity = this;
		}
		
		private void detach_CommunityMetrics_UserActivityLinks(CommunityMetrics_UserActivityLink entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_UserActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityMetrics_ActivitySetting")]
	public partial class CommunityMetrics_ActivitySetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _activity_id;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<CommunityMetrics_Activity> _CommunityMetrics_Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public CommunityMetrics_ActivitySetting()
		{
			this._CommunityMetrics_Activity = default(EntityRef<CommunityMetrics_Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", DbType="Int NOT NULL")]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					if (this._CommunityMetrics_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_Activity_CommunityMetrics_ActivitySetting", Storage="_CommunityMetrics_Activity", ThisKey="activity_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommunityMetrics_Activity CommunityMetrics_Activity
		{
			get
			{
				return this._CommunityMetrics_Activity.Entity;
			}
			set
			{
				CommunityMetrics_Activity previousValue = this._CommunityMetrics_Activity.Entity;
				if (((previousValue != value) 
							|| (this._CommunityMetrics_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunityMetrics_Activity.Entity = null;
						previousValue.CommunityMetrics_ActivitySettings.Remove(this);
					}
					this._CommunityMetrics_Activity.Entity = value;
					if ((value != null))
					{
						value.CommunityMetrics_ActivitySettings.Add(this);
						this._activity_id = value.id;
					}
					else
					{
						this._activity_id = default(int);
					}
					this.SendPropertyChanged("CommunityMetrics_Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityMetrics_Activity")]
	public partial class CommunityMetrics_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _type_name;
		
		private double _factor;
		
		private bool _active;
		
		private int _metric_type;
		
		private string _user_filter;
		
		private int _min_daily;
		
		private int _max_daily;
		
		private int _created_by_user_id;
		
		private System.DateTime _created_on_date;
		
		private int _last_modified_by_user_id;
		
		private System.DateTime _last_modified_on_date;
		
		private EntitySet<CommunityMetrics_UserActivity> _CommunityMetrics_UserActivities;
		
		private EntitySet<CommunityMetrics_ActivitySetting> _CommunityMetrics_ActivitySettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ontype_nameChanging(string value);
    partial void Ontype_nameChanged();
    partial void OnfactorChanging(double value);
    partial void OnfactorChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onmetric_typeChanging(int value);
    partial void Onmetric_typeChanged();
    partial void Onuser_filterChanging(string value);
    partial void Onuser_filterChanged();
    partial void Onmin_dailyChanging(int value);
    partial void Onmin_dailyChanged();
    partial void Onmax_dailyChanging(int value);
    partial void Onmax_dailyChanged();
    partial void Oncreated_by_user_idChanging(int value);
    partial void Oncreated_by_user_idChanged();
    partial void Oncreated_on_dateChanging(System.DateTime value);
    partial void Oncreated_on_dateChanged();
    partial void Onlast_modified_by_user_idChanging(int value);
    partial void Onlast_modified_by_user_idChanged();
    partial void Onlast_modified_on_dateChanging(System.DateTime value);
    partial void Onlast_modified_on_dateChanged();
    #endregion
		
		public CommunityMetrics_Activity()
		{
			this._CommunityMetrics_UserActivities = new EntitySet<CommunityMetrics_UserActivity>(new Action<CommunityMetrics_UserActivity>(this.attach_CommunityMetrics_UserActivities), new Action<CommunityMetrics_UserActivity>(this.detach_CommunityMetrics_UserActivities));
			this._CommunityMetrics_ActivitySettings = new EntitySet<CommunityMetrics_ActivitySetting>(new Action<CommunityMetrics_ActivitySetting>(this.attach_CommunityMetrics_ActivitySettings), new Action<CommunityMetrics_ActivitySetting>(this.detach_CommunityMetrics_ActivitySettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_name", DbType="NVarChar(255)")]
		public string type_name
		{
			get
			{
				return this._type_name;
			}
			set
			{
				if ((this._type_name != value))
				{
					this.Ontype_nameChanging(value);
					this.SendPropertyChanging();
					this._type_name = value;
					this.SendPropertyChanged("type_name");
					this.Ontype_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factor", DbType="Float NOT NULL")]
		public double factor
		{
			get
			{
				return this._factor;
			}
			set
			{
				if ((this._factor != value))
				{
					this.OnfactorChanging(value);
					this.SendPropertyChanging();
					this._factor = value;
					this.SendPropertyChanged("factor");
					this.OnfactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metric_type", DbType="Int NOT NULL")]
		public int metric_type
		{
			get
			{
				return this._metric_type;
			}
			set
			{
				if ((this._metric_type != value))
				{
					this.Onmetric_typeChanging(value);
					this.SendPropertyChanging();
					this._metric_type = value;
					this.SendPropertyChanged("metric_type");
					this.Onmetric_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_filter", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string user_filter
		{
			get
			{
				return this._user_filter;
			}
			set
			{
				if ((this._user_filter != value))
				{
					this.Onuser_filterChanging(value);
					this.SendPropertyChanging();
					this._user_filter = value;
					this.SendPropertyChanged("user_filter");
					this.Onuser_filterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_daily", DbType="Int NOT NULL")]
		public int min_daily
		{
			get
			{
				return this._min_daily;
			}
			set
			{
				if ((this._min_daily != value))
				{
					this.Onmin_dailyChanging(value);
					this.SendPropertyChanging();
					this._min_daily = value;
					this.SendPropertyChanged("min_daily");
					this.Onmin_dailyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_daily", DbType="Int NOT NULL")]
		public int max_daily
		{
			get
			{
				return this._max_daily;
			}
			set
			{
				if ((this._max_daily != value))
				{
					this.Onmax_dailyChanging(value);
					this.SendPropertyChanging();
					this._max_daily = value;
					this.SendPropertyChanged("max_daily");
					this.Onmax_dailyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by_user_id", DbType="Int NOT NULL")]
		public int created_by_user_id
		{
			get
			{
				return this._created_by_user_id;
			}
			set
			{
				if ((this._created_by_user_id != value))
				{
					this.Oncreated_by_user_idChanging(value);
					this.SendPropertyChanging();
					this._created_by_user_id = value;
					this.SendPropertyChanged("created_by_user_id");
					this.Oncreated_by_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on_date", DbType="DateTime NOT NULL")]
		public System.DateTime created_on_date
		{
			get
			{
				return this._created_on_date;
			}
			set
			{
				if ((this._created_on_date != value))
				{
					this.Oncreated_on_dateChanging(value);
					this.SendPropertyChanging();
					this._created_on_date = value;
					this.SendPropertyChanged("created_on_date");
					this.Oncreated_on_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_modified_by_user_id", DbType="Int NOT NULL")]
		public int last_modified_by_user_id
		{
			get
			{
				return this._last_modified_by_user_id;
			}
			set
			{
				if ((this._last_modified_by_user_id != value))
				{
					this.Onlast_modified_by_user_idChanging(value);
					this.SendPropertyChanging();
					this._last_modified_by_user_id = value;
					this.SendPropertyChanged("last_modified_by_user_id");
					this.Onlast_modified_by_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_modified_on_date", DbType="DateTime NOT NULL")]
		public System.DateTime last_modified_on_date
		{
			get
			{
				return this._last_modified_on_date;
			}
			set
			{
				if ((this._last_modified_on_date != value))
				{
					this.Onlast_modified_on_dateChanging(value);
					this.SendPropertyChanging();
					this._last_modified_on_date = value;
					this.SendPropertyChanged("last_modified_on_date");
					this.Onlast_modified_on_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_Activity_CommunityMetrics_UserActivity", Storage="_CommunityMetrics_UserActivities", ThisKey="id", OtherKey="activity_id")]
		public EntitySet<CommunityMetrics_UserActivity> CommunityMetrics_UserActivities
		{
			get
			{
				return this._CommunityMetrics_UserActivities;
			}
			set
			{
				this._CommunityMetrics_UserActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_Activity_CommunityMetrics_ActivitySetting", Storage="_CommunityMetrics_ActivitySettings", ThisKey="id", OtherKey="activity_id")]
		public EntitySet<CommunityMetrics_ActivitySetting> CommunityMetrics_ActivitySettings
		{
			get
			{
				return this._CommunityMetrics_ActivitySettings;
			}
			set
			{
				this._CommunityMetrics_ActivitySettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunityMetrics_UserActivities(CommunityMetrics_UserActivity entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_Activity = this;
		}
		
		private void detach_CommunityMetrics_UserActivities(CommunityMetrics_UserActivity entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_Activity = null;
		}
		
		private void attach_CommunityMetrics_ActivitySettings(CommunityMetrics_ActivitySetting entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_Activity = this;
		}
		
		private void detach_CommunityMetrics_ActivitySettings(CommunityMetrics_ActivitySetting entity)
		{
			this.SendPropertyChanging();
			entity.CommunityMetrics_Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityMetrics_UserActivityLinks")]
	public partial class CommunityMetrics_UserActivityLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _user_activity_id;
		
		private string _text;
		
		private string _href;
		
		private EntityRef<CommunityMetrics_UserActivity> _CommunityMetrics_UserActivity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onuser_activity_idChanging(long value);
    partial void Onuser_activity_idChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnhrefChanging(string value);
    partial void OnhrefChanged();
    #endregion
		
		public CommunityMetrics_UserActivityLink()
		{
			this._CommunityMetrics_UserActivity = default(EntityRef<CommunityMetrics_UserActivity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_activity_id", DbType="BigInt NOT NULL")]
		public long user_activity_id
		{
			get
			{
				return this._user_activity_id;
			}
			set
			{
				if ((this._user_activity_id != value))
				{
					if (this._CommunityMetrics_UserActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_activity_idChanging(value);
					this.SendPropertyChanging();
					this._user_activity_id = value;
					this.SendPropertyChanged("user_activity_id");
					this.Onuser_activity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="nvarchar(255)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_href", DbType="nvarchar(255)")]
		public string href
		{
			get
			{
				return this._href;
			}
			set
			{
				if ((this._href != value))
				{
					this.OnhrefChanging(value);
					this.SendPropertyChanging();
					this._href = value;
					this.SendPropertyChanged("href");
					this.OnhrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunityMetrics_UserActivity_CommunityMetrics_UserActivityLink", Storage="_CommunityMetrics_UserActivity", ThisKey="user_activity_id", OtherKey="id", IsForeignKey=true)]
		public CommunityMetrics_UserActivity CommunityMetrics_UserActivity
		{
			get
			{
				return this._CommunityMetrics_UserActivity.Entity;
			}
			set
			{
				CommunityMetrics_UserActivity previousValue = this._CommunityMetrics_UserActivity.Entity;
				if (((previousValue != value) 
							|| (this._CommunityMetrics_UserActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunityMetrics_UserActivity.Entity = null;
						previousValue.CommunityMetrics_UserActivityLinks.Remove(this);
					}
					this._CommunityMetrics_UserActivity.Entity = value;
					if ((value != null))
					{
						value.CommunityMetrics_UserActivityLinks.Add(this);
						this._user_activity_id = value.id;
					}
					else
					{
						this._user_activity_id = default(long);
					}
					this.SendPropertyChanged("CommunityMetrics_UserActivity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
